{"version":3,"sources":["components/List.js","helper/action.type.js","service.js/config.js","helper/reducer.js","pages/Countries.js","service.js/countries.js","pages/CountryPage.js","pages/Home.js","helper/routes.js","components/Nav.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["List","_ref","items","children","onItemClick","sort","a","b","nameA","name","common","toLowerCase","nameB","_jsxs","_jsx","className","map","_ref2","region","capital","population","flags","Card","CardContent","Typography","color","gutterBottom","variant","component","official","width","src","png","alt","CardActions","Button","onClick","size","ResponseActionTypes","BASE_URL","initialState","countries","isLoading","error","countriesReducer","state","action","type","_objectSpread","payload","Countries","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","navigate","useNavigate","useEffect","fetch","concat","then","response","json","data","catch","err","CircularProgress","countryName","CountryPage","_countryInfo$name","_countryInfo$name2","_countryInfo$flags","_countryInfo$flags2","countryId","useParams","console","log","message","LinearProgress","countryInfo","Home","Routes","route","title","Nav","Link","to","NotFound","App","BrowserRouter","_Fragment","Route","index","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wVAIe,SAASA,EAAIC,GAAoC,IAAjCC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAWH,EAAXG,YAY9C,OAVEF,EAAMG,MAAK,SAACC,EAAGC,GACX,IAAMC,EAAQF,EAAEG,KAAKC,OAAOC,cACtBC,EAAQL,EAAEE,KAAKC,OAAOC,cAE5B,OAAGH,EAAQI,GAAe,EACvBJ,EAAQI,EAAc,EAElB,KAIXC,eAAA,OAAAV,SAAA,CACEW,cAAA,OAAKC,UAAU,WAAUZ,SAAEA,IAC3BW,cAAA,MAAIC,UAAU,OAAMZ,SACjBD,EAAMc,KAAI,SAAAC,GAAmD,IAAhDR,EAAIQ,EAAJR,KAAMS,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAKJ,EAALI,MAC/C,OACER,eAACS,IAAI,CAACP,UAAU,OAAMZ,SAAA,CACpBU,eAACU,IAAW,CAAApB,SAAA,CACVU,eAACW,IAAU,CACTC,MAAM,gBACNC,cAAY,EAAAvB,SAAA,CACb,WACUe,KAEXJ,cAACU,IAAU,CAACG,QAAQ,KAAKC,UAAU,KAAIzB,SACpCM,EAAKC,SAERG,eAACW,IAAU,CAACC,MAAM,gBAAetB,SAAA,CAAC,YACpBgB,KAEdN,eAACW,IAAU,CAACC,MAAM,gBAAetB,SAAA,CAAC,kBACdM,EAAKoB,YAEzBhB,eAACW,IAAU,CAACG,QAAQ,QAAQC,UAAU,IAAGzB,SAAA,CAAC,eACzBiB,EACfN,cAAA,SACAA,cAAA,OAAKgB,MAAM,KAAKC,IAAKV,EAAMW,IAAKC,IAAKZ,EAAMY,YAG/CnB,cAACoB,IAAW,CAAA/B,SACVW,cAACqB,IAAM,CAACC,QAAS,kBAAMhC,EAAYK,EAAKC,SAASiB,QAAQ,YAAYF,MAAM,UAAWY,KAAK,SAAQlC,SAAC,cAxB5EM,EAAKC,gBCtBtC,IAAM4B,EACF,UADEA,EAEF,UAFEA,EAGF,UCHEC,EAAW,iC,QCEXC,EAAe,CACxBC,UAAW,GACXC,WAAW,EACXC,MAAO,IAGEC,EAAmB,SAACC,EAAOC,GAEpC,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAAU,wBAAA,GAAWH,GAAK,IAAEH,WAAW,IACjC,KAAKJ,EACD,OAAAU,wBAAA,GAAWH,GAAK,IAAEJ,UAAWK,EAAOG,QAASP,WAAW,IAC5D,KAAKJ,EACD,OAAAU,wBAAA,GAAWH,GAAK,IAAEF,MAAOG,EAAOG,QAASP,WAAW,IACxD,QACI,OAAOF,I,MCRJ,SAASU,IAEtB,IAAAC,EAA0BC,qBAAWR,EAAkBJ,GAAaa,EAAAC,YAAAH,EAAA,GAA7DN,EAAKQ,EAAA,GAAEE,EAAQF,EAAA,GAKhBG,EAAWC,cAajB,GAXAC,qBAAU,WACRH,EAAS,CAACR,KAAMT,IChBXqB,MAAM,GAADC,OAAIrB,EAAQ,SAAQsB,MAAK,SAACC,GAAQ,OAAKA,EAASC,UDkBxCF,MAAK,SAACG,GACtBT,EAAS,CAACR,KAAMT,EAA6BW,QAASe,OAEvDC,OAAM,SAACC,GACNX,EAAS,CAACR,KAAMT,EAA6BW,QAASiB,SAEvD,IAEArB,EAAMH,UACP,OAAO5B,cAACqD,IAAgB,IAG1B,GAAGtB,EAAMF,MACP,OAAO7B,cAAA,KAAGC,UAAU,QAAOZ,SAAE0C,EAAMF,QAOrC,OACE9B,eAAA,OAAAV,SAAA,CACEW,cAAA,MAAIC,UAAU,QAAOZ,SAAC,uBACtBW,cAACd,EAAI,CAACI,YAPiB,SAACgE,GAC1BZ,EAAS,cAADI,OAAeQ,KAMkBlE,MAAO2C,EAAMJ,UAAUtC,SAC9DW,cAAA,MAAAX,SAAI,8F,YEtCK,SAASkE,IAAe,IAADC,EAAAC,EAAAC,EAAAC,EAC5BC,EAAcC,cAAdD,UACRvB,EAA4BC,qBAAWR,EAAkBJ,GAAaa,EAAAC,YAAAH,EAAA,GAA9DN,EAAKQ,EAAA,GAAEE,EAAQF,EAAA,GAcvB,GAbEuB,QAAQC,IAAIH,EAAW,aAEzBhB,qBAAU,WDLuB,IAACjD,ECMhC8C,EAAS,CAACR,KAAMT,KDNgB7B,ECQZiE,EDNff,MAAM,GAADC,OAAIrB,EAAQ,UAAAqB,OAASnD,IAAQoD,MAAK,SAACC,GAAQ,OAAKA,EAASC,WCMpCF,MAAK,SAACG,GACnCT,EAAS,CAACR,KAAMT,EAA6BW,QAASe,OAEvDC,OAAM,SAACC,GACNX,EAAS,CAACR,KAAMT,EAA6BW,QAASiB,EAAIY,eAE3D,CAACJ,IAED7B,EAAMH,UACP,OAAO5B,cAACiE,IAAc,IAGxB,GAAGlC,EAAMF,MACP,OAAO7B,cAAA,KAAGC,UAAU,QAAOZ,SAAE0C,EAAMF,QAGrC,IAAMqC,GAAmB,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAOJ,UAAU,KAAM,GAE3C,OACE5B,eAAA,OAAAV,SAAA,CACEU,eAAA,MAAAV,SAAA,CAAI,WAAoB,OAAX6E,QAAW,IAAXA,OAAW,EAAXA,EAAa9D,UAC1BL,eAAA,MAAAV,SAAA,CAAI,YAAqB,OAAX6E,QAAW,IAAXA,GAAiB,QAANV,EAAXU,EAAavE,YAAI,IAAA6D,OAAN,EAAXA,EAAmB5D,UACjCG,eAAA,MAAAV,SAAA,CAAI,YAAqB,OAAX6E,QAAW,IAAXA,OAAW,EAAXA,EAAa7D,WAC3BN,eAAA,MAAAV,SAAA,CAAI,kBAA2B,OAAX6E,QAAW,IAAXA,GAAiB,QAANT,EAAXS,EAAavE,YAAI,IAAA8D,OAAN,EAAXA,EAAmB1C,YACvChB,eAAA,MAAAV,SAAA,CAAI,eAAwB,OAAX6E,QAAW,IAAXA,OAAW,EAAXA,EAAa5D,cAC9BN,cAAA,OAAKiB,IAAgB,OAAXiD,QAAW,IAAXA,GAAkB,QAAPR,EAAXQ,EAAa3D,aAAK,IAAAmD,OAAP,EAAXA,EAAoBxC,IAAKC,IAAgB,OAAX+C,QAAW,IAAXA,GAAkB,QAAPP,EAAXO,EAAa3D,aAAK,IAAAoD,OAAP,EAAXA,EAAoBxC,IAAKH,MAAM,UCzC9D,SAASmD,IAEtB,OACEnE,cAAA,OAAAX,SACEW,cAAA,MAAAX,SAAI,0FCAH,IAAM+E,EAAS,CACpB,CACEC,MAAO,IACPvD,UAAWqD,EACXG,MAAO,QAET,CACED,MAAO,aACPvD,UAAWsB,EACXkC,MAAO,iBAET,CACED,MAAO,wBACPvD,UAAWyC,EACXe,MAAO,qB,MCdI,SAASC,IAEtB,OACEvE,cAAA,OAAAX,SACEW,cAAA,OAAKC,UAAU,cAAaZ,SACzB+E,EAAOlE,KAAI,SAAAf,GAAA,IAAEkF,EAAKlF,EAALkF,MAAOC,EAAKnF,EAALmF,MAAK,OAAMvE,eAACyE,IAAI,CAACvE,UAAU,OAAmBwE,GAAIJ,EAAMhF,SAAA,CAAEiF,EAAM,MAAzBA,UCTrD,SAASI,IACpB,OAAO1E,cAAA,MAAAX,SAAI,cCMA,SAASsF,IACtB,OACE3E,cAAC4E,IAAa,CAAAvF,SACZU,eAAA8E,WAAA,CAAAxF,SAAA,CACEW,cAACuE,EAAG,IACJxE,eAACqE,IAAM,CAAA/E,SAAA,CACLW,cAAC8E,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASjF,cAACmE,EAAI,MACpCnE,cAAC8E,IAAK,CAAEE,KAAK,aAAaC,QAASjF,cAACoC,EAAS,MAC7CpC,cAAC8E,IAAK,CAAEE,KAAK,wBAAwBC,QAASjF,cAACuD,EAAW,MAC1DvD,cAAC8E,IAAK,CAACE,KAAK,IAAIC,QAASjF,cAAC0E,EAAQ,cChB5C,IAYeQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,SAAA5D,GAAkD,IAA/CkG,EAAMlG,EAANkG,OAAQC,EAAMnG,EAANmG,OAAQC,EAAMpG,EAANoG,OAAQC,EAAMrG,EAANqG,OAAQC,EAAOtG,EAAPsG,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP3F,cAAC4F,IAAMC,WAAU,CAAAxG,SACfW,cAAC2E,EAAG,MAENmB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40573d85.chunk.js","sourcesContent":["import { Button, Card, CardActions, CardContent, Typography } from \"@material-ui/core\";\nimport './List.css';\n\n// using material-ul\nexport default function List({ items, children, onItemClick }) {\n\n    items.sort((a, b) => {\n        const nameA = a.name.common.toLowerCase();\n        const nameB = b.name.common.toLowerCase();\n\n        if(nameA < nameB) return -1;\n        if(nameA > nameB) return 1;\n\n        return 0;\n\n    });\n  return (\n    <div>\n      <div className=\"children\">{children}</div>\n      <ul className=\"list\">\n        {items.map(({ name, region, capital, population, flags }) => {\n          return (\n            <Card className=\"card\" key={name.common}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Region: {region}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {name.common}\n                </Typography>\n                <Typography color=\"textSecondary\">\n                    Captial: {capital}\n                </Typography>\n                <Typography color=\"textSecondary\">\n                    Official Name: {name.official}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Population: {population}\n                  <br />\n                  <img width='45' src={flags.png} alt={flags.alt}/>\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button onClick={() => onItemClick(name.common)} variant=\"contained\" color=\"primary\"  size=\"medium\">Click</Button>\n              </CardActions>\n            </Card>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\n\n\n// export default function List({ items, children }) {\n//   return (\n//     <div>\n//       {children}\n//       <ul>\n//         {items.map(({ name }) => {\n//           return <li key={name}>{name}</li>;\n//         })}\n//       </ul>\n//     </div>\n//   );\n// }\n","export const ResponseActionTypes = {\n  started: 'started',\n  success: 'success',\n  failure: 'failure'\n};\n","export const BASE_URL = 'https://restcountries.com/v3.1';","import {ResponseActionTypes} from \"./action.type\";\n\nexport const initialState = {\n    countries: [],\n    isLoading: false,\n    error: ''\n};\n\nexport const countriesReducer = (state, action) => {\n\n    switch (action.type) {\n        case ResponseActionTypes.started:\n            return {...state, isLoading: true};\n        case ResponseActionTypes.success:\n            return {...state, countries: action.payload, isLoading: false};\n        case ResponseActionTypes.failure:\n            return {...state, error: action.payload, isLoading: false};\n        default:\n            return initialState;\n    }\n};","import { CircularProgress } from \"@material-ui/core\";\nimport { useEffect, useReducer } from \"react\"\nimport List from \"../components/List\";\nimport { ResponseActionTypes } from \"../helper/action.type\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAllCountries } from \"../service.js/countries\";\nimport {countriesReducer, initialState} from \"../helper/reducer\";\nimport \"./Country.css\";\n\n\nexport default function Countries() {\n\n  const [state, dispatch] = useReducer(countriesReducer, initialState);\n  //initialState is a object\n  //dispatch === action is a function\n  // state is an object\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch({type: ResponseActionTypes.started}); // replace all dispatch() instead of setFunctions\n\n    getAllCountries().then((data) => {\n      dispatch({type: ResponseActionTypes.success, payload: data});\n    })\n    .catch((err) => {\n      dispatch({type: ResponseActionTypes.failure, payload: err});\n    });\n  }, []);\n\n  if(state.isLoading) {\n    return <CircularProgress />//<p>Loading...</p>\n  }\n\n  if(state.error) {\n    return <p className=\"error\">{state.error}</p>\n  }\n\n  const handleCountryClick = (countryName) => {// for every country click\n    navigate(`/countries/${countryName}`);\n  };\n\n  return (\n    <div>\n      <h1 className=\"title\">All Countries List</h1>\n      <List onItemClick={handleCountryClick} items={state.countries}>\n      <h3>If you want to know more about every country, please click on your favorite country.</h3>\n      </List>\n    </div>\n  )\n}\n\n\n","import {BASE_URL} from \"./config\";\n\nexport const getAllCountries = () => {\n\n  return fetch(`${BASE_URL}/all`).then((response) => response.json());\n};\n\n\nexport const searchByCountryName = (name) => {\n\n  return fetch(`${BASE_URL}/name/${name}`).then((response) => response.json());\n};","import { LinearProgress } from \"@material-ui/core\";\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router\";\nimport { searchByCountryName } from \"../service.js/countries\";\nimport {countriesReducer, initialState} from \"../helper/reducer\";\nimport {ResponseActionTypes} from \"../helper/action.type\";\n\n\nexport default function CountryPage() {\n  const { countryId } = useParams();\n  const [ state, dispatch ] = useReducer(countriesReducer, initialState);\n    console.log(countryId, 'countryId')\n\n  useEffect(() => {\n    dispatch({type: ResponseActionTypes.started}); // replace all dispatch() instead of setFunctions\n\n    searchByCountryName(countryId).then((data) => {\n      dispatch({type: ResponseActionTypes.success, payload: data});\n    })\n    .catch((err) => {\n      dispatch({type: ResponseActionTypes.failure, payload: err.message});\n    });\n  }, [countryId]);\n\n  if(state.isLoading) {\n    return <LinearProgress />;\n  }\n\n  if(state.error) {\n    return <p className=\"error\">{state.error}</p>\n  }\n\n  const countryInfo = state?.countries[0] || {};\n\n  return (\n    <div>\n      <h1>Region: {countryInfo?.region}</h1>\n      <h2>Country: {countryInfo?.name?.common}</h2>\n      <h3>Capital: {countryInfo?.capital}</h3>\n      <h3>Official name: {countryInfo?.name?.official}</h3>\n      <h3>Population: {countryInfo?.population}</h3>\n      <img src={countryInfo?.flags?.png} alt={countryInfo?.flags?.alt} width=\"70\" />\n    </div>\n  )\n}","export default function Home() {\n\n  return (\n    <div>\n      <h1>On the countries' page demonstrated all  countries list. Find you favorite country!</h1>\n    </div>\n  )\n}","import Countries from \"../pages/Countries\";\nimport CountryPage from \"../pages/CountryPage\";\nimport Home from \"../pages/Home\";\n\nexport const Routes = [\n  {\n    route: \"/\",\n    component: Home,\n    title: 'Home'\n  },\n  {\n    route: \"/countries\",\n    component: Countries,\n    title: 'All Countries'\n  },\n  {\n    route: \"/countries/:countryId\",\n    component: CountryPage,\n    title: 'Favorite Country'\n  }\n];","import { Link } from \"react-router-dom\";\nimport { Routes } from \"../helper/routes\";\nimport \"./Nav.css\";\n\nexport default function Nav() {\n\n  return (\n    <div>\n      <nav className=\"main-navbar\">\n        {Routes.map(({route, title}) => <Link className=\"link\" key={title} to={route}>{title} </Link>)}\n      </nav>\n    </div>\n  )\n}","export default function NotFound() {\n    return <h3>Not Found</h3>\n}","import { Route, Routes, BrowserRouter} from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Countries from \"./pages/Countries\";\nimport CountryPage from \"./pages/CountryPage\";\nimport NotFound from \"./components/NotFound\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <>\n        <Nav/>\n        <Routes>\n          <Route index path=\"/\" element={<Home/>}></Route>\n          <Route  path=\"/countries\" element={<Countries/>}></Route>\n          <Route  path=\"/countries/:countryId\" element={<CountryPage/>}></Route>\n          <Route path=\"*\" element={<NotFound />}></Route>\n        </Routes>\n      </>\n    </BrowserRouter>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}